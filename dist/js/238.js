"use strict";(self["webpackChunkchronicle"]=self["webpackChunkchronicle"]||[]).push([[238],{3217:function(e,t,s){s.d(t,{Z:function(){return u}});var a=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"code-preview",class:{popup:e.popup,closing:e.closing},attrs:{title:e.language},on:{click:function(t){return t.target!==t.currentTarget?null:e.$emit("close")},mouseover:function(t){if(t.target!==t.currentTarget)return null;e.closing=!0},mouseout:function(t){if(t.target!==t.currentTarget)return null;e.closing=!1}}},[t("div",{staticClass:"content"},[e.popup?t("div",{staticClass:"popup-controls"},[t("button",{staticClass:"download",on:{click:function(t){return e.download_as_file(e.file_name,e.text_content)}}},[e._v("download")]),t("button",{staticClass:"copy",class:{copied_tooltip:e.copied_tooltip},on:{click:function(t){e.copy_to_clipboard(e.text_content),e.show_copied_tooltip()}}},[e._v("copy")]),t("button",{staticClass:"close",class:{closing:e.closing},on:{click:function(t){return e.$emit("close")},mouseover:function(t){if(t.target!==t.currentTarget)return null;e.closing=!0},mouseout:function(t){if(t.target!==t.currentTarget)return null;e.closing=!1}}},[e._v("close")])]):e._e(),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs",value:e.text_content,expression:"text_content"}]},[t("code",{class:e.language})])])])},l=[],i=s(7581),r=s(4026),o=s(4806),n=s(3889),h=(0,i.Z)(r.Z).extend({name:"CodePreview",data(){return{copied_tooltip:!1,closing:!1,text_content:"",file_name:"unknown",language:"json"}},props:{code:{type:[String,Object],required:!0,default(){return'const example = "Hello, PrismJS!";'}},file:{type:String,default:null},popup:{type:Boolean,default:!1},download_name:{type:String,default:""}},mounted(){this.update()},watch:{code(){this.update()},file(){this.update()}},methods:{async update(){this.file?(this.text_content=await(0,n.fK)(this.file),this.file_name=this.download_name.length?this.download_name:this.file.split("/").pop(),this.language=this.detect_laguage(this.file),console.log("update",this.file,this.text_content)):((0,o.isString)(this.code)?(this.text_content=this.code,this.language="text"):(this.text_content=JSON.stringify(this.code,null,4),this.language="json"),this.file_name=this.download_name)},show_copied_tooltip(){this.copied_tooltip=!0,setTimeout((()=>{this.copied_tooltip=!1}),1e3)},download_as_file(e,t){var s=document.createElement("a");s.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),s.setAttribute("download",e),s.style.display="none",document.body.appendChild(s),s.click(),document.body.removeChild(s)},detect_laguage(e){return e.endsWith(".js")?"javascript":e.endsWith(".py")?"python":e.endsWith(".ts")?"typescript":e.endsWith(".json")?"json":e.endsWith(".html")?"html":e.endsWith(".css")?"css":e.endsWith(".md")?"markdown":e.endsWith(".gd")?"gdscript":"json"}}}),d=h,_=s(1001),c=(0,_.Z)(d,a,l,!1,null,null,null),u=c.exports},4045:function(e,t,s){s.r(t),s.d(t,{EColorScheme:function(){return w},default:function(){return S}});var a,l,i,r=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"maze-generator"},[t("div",{staticClass:"control-panel"},[t("Tweakpane",{ref:"tweakpane"}),e._m(0)],1),t("Canvas2D",{ref:"canvas",attrs:{show_debug:!e.is_mobile,allow_user_scale:!0,allow_user_translate:!0,allow_context_menu:!0},on:{update:e.render}}),e.show_json_data_popup?t("CodePreview",{attrs:{code:e.json_data,popup:!0,download_name:`maze_${e.maze_generator.seed}.json`},on:{close:function(t){e.show_json_data_popup=!1}}}):e._e()],1)},o=[function(){var e=this,t=e._self._c;e._self._setupProxy;return t("ul",{staticClass:"info"},[t("li",[e._v("Use "),t("i",[e._v("Space")]),e._v(" to reset user transformations")])])}],n=s(77),h=s(7327),d=(s(7658),s(4806)),_=s(7471),c=s.n(_);(function(e){e[e["Empty"]=0]="Empty",e[e["Default"]=1]="Default",e[e["Shortcut"]=2]="Shortcut",e[e["Loop"]=3]="Loop",e[e["Start"]=4]="Start",e[e["End"]=5]="End"})(a||(a={})),function(e){e[e["Crossroad"]=0]="Crossroad",e[e["Fork"]=1]="Fork",e[e["Transitive"]=2]="Transitive",e[e["DeadEnd"]=3]="DeadEnd",e[e["Isolated"]=4]="Isolated"}(l||(l={})),function(e){e[e["Pop"]=0]="Pop",e[e["Shift"]=1]="Shift"}(i||(i={}));class u{constructor(e,t,s,l=a.Default){(0,h.Z)(this,"index",void 0),(0,h.Z)(this,"distance",void 0),(0,h.Z)(this,"x",void 0),(0,h.Z)(this,"y",void 0),(0,h.Z)(this,"walls",null),(0,h.Z)(this,"category",void 0),(0,h.Z)(this,"visited",void 0),(0,h.Z)(this,"route",void 0),(0,h.Z)(this,"maze_generator",void 0),(0,h.Z)(this,"neighbours_offsets",[{x:-1,y:0},{x:0,y:-1},{x:1,y:0},{x:0,y:1}]),this.maze_generator=e,this.walls={north:!0,east:!0,south:!0,west:!0},this.x=t,this.y=s,this.visited=!1,this.category=l}get walls_count(){let e=0;return this.walls.north&&e++,this.walls.east&&e++,this.walls.south&&e++,this.walls.west&&e++,e}get_closed_neighbours(){return(0,d.filter)(this.get_all_neighbours(),(e=>this.get_wall_between(e)&&e.walls_count!==l.Isolated))}get_open_neighbours(){return(0,d.filter)(this.get_all_neighbours(),(e=>!this.get_wall_between(e)))}get_all_neighbours(){this.maze_generator.cells;return(0,d.filter)((0,d.map)(this.neighbours_offsets,((e,t)=>this.get_neighbour_cell(t))),(e=>null!==e))}remove_wall_between(e){this.set_wall_between(e,!1)}add_wall_between(e){this.set_wall_between(e,!0)}set_wall_between(e,t){let s=this,a=s.x-e.x,l=s.y-e.y;1===a?(s.walls.west=t,e.walls.east=t):-1===a&&(s.walls.east=t,e.walls.west=t),1===l?(s.walls.north=t,e.walls.south=t):-1===l&&(s.walls.south=t,e.walls.north=t)}get_wall_between(e){let t=this.x-e.x,s=this.y-e.y;return 1===t?this.walls.west:-1===t?this.walls.east:1===s?this.walls.north:-1===s?this.walls.south:void 0}get_neighbour_cell(e){if(e<0||e>3)throw new Error("offset must be between 0 and 3");let t=this.x+this.neighbours_offsets[e].x,s=this.y+this.neighbours_offsets[e].y;return t<0||t>=this.maze_generator.grid_size||s<0||s>=this.maze_generator.grid_size?null:this.maze_generator.cells[t][s]}}class g{constructor(){(0,h.Z)(this,"cells",void 0),(0,h.Z)(this,"start_cell",void 0),(0,h.Z)(this,"end_cell",void 0),(0,h.Z)(this,"seed",0),(0,h.Z)(this,"grid_size",4),(0,h.Z)(this,"sparseness",.5),(0,h.Z)(this,"dead_ends_ratio",.75),(0,h.Z)(this,"shortcuts_ratio",.2),(0,h.Z)(this,"generation_order",i.Shift),(0,h.Z)(this,"current_cell_index",0),(0,h.Z)(this,"seeded_random",void 0),(0,h.Z)(this,"routes",[]),this.cells=[]}get max_cells_count(){return this.grid_size*this.grid_size}update_generator(){this.seeded_random=c()(this.seed.toString())}get_random_cell(){return this.cells[Math.floor(this.seeded_random()*this.grid_size)][Math.floor(this.seeded_random()*this.grid_size)]}initialize(){this.update_generator(),this.current_cell_index=0,this.cells=[],this.routes=[];for(let e=0;e<this.grid_size;e++){this.cells[e]=[];for(let t=0;t<this.grid_size;t++)this.cells[e][t]=new u(this,e,t,a.Default)}}generate(){this.initialize();let e=[],t=this.start_cell=this.get_random_cell(),s=t;t.distance=0,t.index=this.current_cell_index,t.visited=!0,t.category=a.Start,e.push(t);let r=[];while(e.length>0){if(r.push(t),t.index>=Math.max(1,(1-this.sparseness)*this.max_cells_count)){r.length>1&&this.routes.push(r),r=[];break}let a=t.get_all_neighbours(),l=a.filter((e=>!1===e.visited));if(l.length>0){let a=l[Math.floor(this.seeded_random()*l.length)];t.remove_wall_between(a),a.visited=!0,a.distance=t.distance+1,a.index=++this.current_cell_index,e.push(a),t=a,s=t.distance>s.distance?t:s}else{switch(this.generation_order){case i.Pop:t=e.pop();break;case i.Shift:t=e.shift();break}r.length>1&&this.routes.push(r),r=[]}}s.category=a.End,this.end_cell=s,this.for_each_cell((e=>{(0,d.isUndefined)(e.index)&&(e.index=-1)}));let o=this.find_cells_with_accessibility(l.DeadEnd);o.forEach((e=>{if(this.seeded_random()>this.dead_ends_ratio){if(e.category===a.Start||e.category===a.End)return;let t=e.get_closed_neighbours(this.cells);if(t.length>0){let s=t[Math.floor(this.seeded_random()*t.length)];e.remove_wall_between(s),e.category=a.Loop,this.routes.push([e,s])}}}));let n=this.find_cells_with_accessibility(l.Transitive);n.forEach((e=>{let t=e.get_closed_neighbours();if(t.length>1){let s=t[Math.floor(this.seeded_random()*t.length)];this.seeded_random()<this.shortcuts_ratio&&(e.remove_wall_between(s),e.category=a.Shortcut,this.routes.push([e,s]))}})),this.for_each_cell((e=>{e.walls_count===l.Isolated&&(e.category=a.Empty)})),this.reset_visited()}find_cells_with_accessibility(e){let t=[];return this.for_each_cell((s=>{s.walls_count===e&&t.push(s)})),t}reset_visited(){this.for_each_cell((e=>{e.visited=!1}))}for_each_cell(e){this.cells.forEach((t=>{t.forEach((t=>{e(t)}))}))}to_json(){return{grid:this.grid_size,routes:(0,d.map)(this.routes,(e=>(0,d.map)(e,(e=>e.index)))),start:this.start_cell.index,end:this.end_cell.index,cells:(0,d.map)((0,d.flatten)(this.cells),(e=>({x:e.x,y:e.y,walls:e.walls,category:e.category,distance:e.distance,index:e.index})))}}}var w,f=s(3695),p=s(7581),m=s(4026),b=s(3217);(function(e){e[e["ProgrammerView"]=0]="ProgrammerView",e[e["MidnightContrast"]=1]="MidnightContrast",e[e["Midnight"]=2]="Midnight"})(w||(w={}));const v={[w.ProgrammerView]:{background:"#050505",floor_start_and_end:"#142f1e",floor_isolated:"#050505",floor_dead_end:"#2f1414",floor_transitive:"#191919",fork_floor:"#26142f",crossroad_floor:"#2f142f",wall_north:"hsl(0deg 50% 50%)",wall_east:"hsl(90deg 50% 50%)",wall_south:"hsl(180deg 50% 50%)",wall_west:"hsl(270deg 50% 50%)",label_start:"#8bc34a",label_end:"#ff5722",label_shortcut:"#4f4937",label_loop:"#2b4964",label_dead_end:"#454545",label_fork:"#454545",label_crossroad:"#454545",label_background:"#000000"},[w.MidnightContrast]:{background:"#0d1117",floor_start_and_end:"#58a6ff",floor_isolated:"#161b22",floor_dead_end:"#ff7b72",floor_transitive:"#30363d",fork_floor:"#a371f7",crossroad_floor:"#a371f7",wall_north:"hsl(210deg 100% 70%)",wall_east:"hsl(45deg 100% 60%)",wall_south:"hsl(140deg 100% 60%)",wall_west:"hsl(330deg 100% 70%)",label_start:"#7ee787",label_end:"#ff6e6e",label_shortcut:"#f2cc60",label_loop:"#56d4dd",label_dead_end:"#ff8585",label_fork:"#bf91f3",label_crossroad:"#4c9aff",label_background:"#21262d"},[w.Midnight]:{background:"#252a33",floor_start_and_end:"#3b5440",floor_isolated:"#1f232b",floor_dead_end:"#513e3e",floor_transitive:"#3e4451",fork_floor:"#4c424c",crossroad_floor:"#413e51",wall_north:"hsl(210deg 80% 50%)",wall_east:"hsl(45deg 80% 50%)",wall_south:"hsl(140deg 80% 50%)",wall_west:"hsl(330deg 80% 50%)",label_start:"#68a97b",label_end:"#e57373",label_shortcut:"#e0ca68",label_loop:"#68a0b0",label_dead_end:"#e59797",label_fork:"#a094c7",label_crossroad:"#6094cc",label_background:"#2d313a"}};var x=(0,p.Z)(m.Z).extend({name:"MazeGenerator",computed:{},props:{category:String,seed:{type:String,default:0}},components:{Tweakpane:n.Z,Canvas2D:f.Z,CodePreview:b.Z},data(){return{wall_width:.015,path_width:.035,wall_padding:.03,current_color_scheme:w.Midnight,json_data:{},show_json_data_popup:!1}},mounted(){window.maze_generator=this,this.render=this.render.bind(this),this.canvas=this.$refs.canvas,this.maze_generator=new g,isNaN(parseInt(this.seed))?(console.log("seed: random"),this.set_random_seed()):(console.log(`seed not random: ${this.seed}`),this.maze_generator.seed=parseInt(this.seed)),this.generate(),this.update_canvas(),this.setup_tweakpane(),this.render()},beforeDestroy(){window.maze_generator=null},methods:{generate(){this.maze_generator.generate(),this.json_data=this.maze_generator.to_json()},render(){this.canvas&&(this.canvas.clear(v[this.current_color_scheme].background),this.draw_cells(),this.draw_path(),this.draw_lables(),this.draw_indexes(),this.canvas.render())},update_canvas(){this.canvas.viewport.width=this.maze_generator.grid_size,this.canvas.viewport.height=this.maze_generator.grid_size,this.canvas.user.scale=1,this.canvas.resize_canvas(),this.canvas.centrize()},draw_cells(){this.maze_generator.for_each_cell((e=>{this.draw_cell(e)}))},draw_lables(){this.maze_generator.cells.forEach((e=>{e.forEach((e=>{switch(e.category){case a.Start:this.draw_cell_label(e,"START",v[this.current_color_scheme].label_start);break;case a.End:this.draw_cell_label(e,"FINISH",v[this.current_color_scheme].label_end);break;case a.Shortcut:this.draw_cell_label(e,"shortcut",v[this.current_color_scheme].label_shortcut);break;case a.Loop:this.draw_cell_label(e,"loop",v[this.current_color_scheme].label_loop);break;default:switch(e.walls_count){case l.DeadEnd:this.draw_cell_label(e,"dead",v[this.current_color_scheme].label_dead_end);break;case l.Fork:this.draw_cell_label(e,"fork",v[this.current_color_scheme].label_fork);break;case l.Crossroad:this.draw_cell_label(e,"cross",v[this.current_color_scheme].label_crossroad);break}}}))}))},draw_cell_label(e,t,s){const a=e.x,l=e.y;let i=this.canvas.measure_text({text:t,font_family:"monospace",font_size:1/8});this.canvas.draw_rect({x:a+.5-1.1*i.width/2,y:l+.5-1.1*i.height,width:1.1*i.width,height:1/8,fill_color:v[this.current_color_scheme].label_background}),this.canvas.draw_text({x:a+.5,y:l+.5,text:t,fill_color:s,font_family:"monospace",font_size:1/8,text_align:"center",max_width:1})},draw_cell(e){const t=e.x,s=e.y;let i=this.wall_padding;if(e.category===a.Start||e.category===a.End)this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].floor_start_and_end});else switch(e.walls_count){case l.Isolated:return void this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].floor_isolated});case l.DeadEnd:this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].floor_dead_end});break;case l.Transitive:this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].floor_transitive});break;case l.Fork:this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].fork_floor});break;case l.Crossroad:this.canvas.draw_rect({x:t+i,y:s+i,width:1-2*i,height:1-2*i,fill_color:v[this.current_color_scheme].crossroad_floor});break}e.walls.north&&this.canvas.draw_line({points:[{x:t,y:s+i},{x:t+1,y:s+i}],stroke_color:v[this.current_color_scheme].wall_north,line_width:this.wall_width}),e.walls.east&&this.canvas.draw_line({points:[{x:t+1-i,y:s},{x:t+1-i,y:s+1}],stroke_color:v[this.current_color_scheme].wall_east,line_width:this.wall_width}),e.walls.south&&this.canvas.draw_line({points:[{x:t,y:s+1-i},{x:t+1,y:s+1-i}],stroke_color:v[this.current_color_scheme].wall_south,line_width:this.wall_width}),e.walls.west&&this.canvas.draw_line({points:[{x:t+i,y:s},{x:t+i,y:s+1}],stroke_color:v[this.current_color_scheme].wall_west,line_width:this.wall_width})},draw_indexes(){let e=this.wall_padding;this.maze_generator.for_each_cell((t=>{t.category!==a.Empty&&this.canvas.draw_text({x:t.x-e+1-1/16,y:t.y-e+1-1/16,text:`idx: ${t.index}`,fill_color:"#ffffff",font_family:"monospace",font_size:1/16,text_align:"right",max_width:1})})),this.maze_generator.for_each_cell((t=>{t.category!==a.Empty&&this.canvas.draw_text({x:t.x+e+1/16,y:t.y-e+1-1/16,text:`dst: ${t.distance}`,fill_color:"#000000",font_family:"monospace",font_size:1/16,text_align:"left",max_width:1})}))},draw_path(e=this.maze_generator.start_cell){let t=this.maze_generator.routes;t.forEach(((e,s)=>{let a=(0,d.map)(e,((e,t)=>({x:e.x+.5,y:e.y+.5})));this.canvas.draw_line({points:a,stroke_color:`hsl(${s/t.length*360+90}, 100%, 75%)`,line_width:this.path_width})}))},set_random_seed(){this.maze_generator.seed=Math.floor(1e4*Math.random())},setup_tweakpane(){let e=this.$refs.tweakpane.pane;e.addBlade({view:"separator"}),e.addBinding(this.maze_generator,"seed",{label:"Seed",min:0,max:1e4,step:1}).on("change",(0,d.throttle)((()=>{this.generate(),this.render(),this.update_route({seed:this.maze_generator.seed.toString()})}),1e3/15)),e.addButton({title:"Generate maze"}).on("click",(()=>{this.set_random_seed(),this.generate(),this.$refs.tweakpane.pane.refresh(),this.update_canvas(),this.render()})),e.addBlade({view:"separator"}),e.addBinding(this.maze_generator,"grid_size",{label:"Grid Size",min:2,max:20,step:1}).on("change",(0,d.throttle)((()=>{this.update_canvas(),this.generate(),this.render()}),1e3/15)),e.addBinding(this.maze_generator,"sparseness",{label:"Sparseness",min:0,max:1,step:.001}).on("change",(0,d.throttle)((()=>{this.generate(),this.render()}),1e3/15)),e.addBinding(this.maze_generator,"dead_ends_ratio",{label:"Dead-Ends Ratio",min:0,max:1,step:.001}).on("change",(0,d.throttle)((()=>{this.generate(),this.render()}),1e3/15)),e.addBinding(this.maze_generator,"shortcuts_ratio",{label:"Shortcuts Ratio",min:0,max:1,step:.001}).on("change",(0,d.throttle)((()=>{this.generate(),this.render()}),1e3/15)),e.addBlade({view:"list",label:"Generation Order",options:[{text:"Pop",value:0},{text:"Shift",value:1}],value:1}).on("change",(0,d.throttle)((e=>{console.log(e.value),this.maze_generator.generation_order=e.value,this.generate(),this.render()}),1e3/15)),e.addBlade({view:"separator"}),e.addBlade({view:"list",label:"Theme",options:[{text:"ProgrammerView",value:0},{text:"MidnightContrast",value:1},{text:"Midnight",value:2}],value:2}).on("change",(e=>{this.current_color_scheme=e.value,this.render()})),e.addBinding(this,"wall_padding",{label:"Walls Padding",min:0,max:.2,step:.01}).on("change",(()=>{this.render()})),e.addBinding(this,"wall_width",{label:"Walls Width",min:.001,max:.05,step:.01}).on("change",(()=>{this.render()})),e.addBinding(this,"path_width",{label:"Path Width",min:.01,max:.25,step:.01}).on("change",(()=>{this.render()})),e.addBlade({view:"separator"}),e.addButton({title:"Show JSON"}).on("click",(()=>{this.show_json_data_popup=!0})),e.addBlade({view:"separator"}),e.addButton({title:"Reset Viewport"}).on("click",(()=>{this.canvas.reset_user_transform(),this.canvas.centrize()}))}}}),y=x,k=s(1001),z=(0,k.Z)(y,r,o,!1,null,null,null),S=z.exports}}]);
//# sourceMappingURL=238.js.map