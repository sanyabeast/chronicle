"use strict";(self["webpackChunkchronicle"]=self["webpackChunkchronicle"]||[]).push([[975,154,229],{4229:function(e,t,a){a.r(t),a.d(t,{EMimeTypes:function(){return i},default:function(){return p}});var i,r=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"drag-and-drop-manager",on:{dragenter:function(t){return t.preventDefault(),e._handle_dragenter.apply(null,arguments)},dragover:function(t){return t.preventDefault(),e._handle_dragover.apply(null,arguments)},drop:function(t){return t.preventDefault(),e._handle_drop.apply(null,arguments)}}},[e.show_tooltip?t("p",{staticClass:"drag-and-drop-tooltop"},[e._v(e._s(e.message))]):e._e(),e.is_mobile?e._e():t("div",{staticClass:"drop-target",class:{dragging:e.dragging}},[e.dragging?t("p",[e._v(e._s(e.message))]):e._e()]),t("input",{ref:"fileInput",staticStyle:{display:"none"},attrs:{type:"file",accept:e.mime},on:{change:e._handle_file_input_change}})])},n=[],s=a(7581),d=a(4026);(function(e){e["Image"]="image/*",e["Video"]="video/*",e["Audio"]="audio/*",e["Text"]="text/*",e["Application"]="application/*",e["GltfGlb"]="model/gltf-binary",e["Any"]="*/*"})(i||(i={}));var l=(0,s.Z)(d.Z).extend({name:"DragAndDropManager",data(){return{dragging:!1}},props:{mime:{type:String,default:i.Any},message:{type:String,default:"Drag and drop an files here"},on_file:Function,on_files:Function,show_tooltip:{type:Boolean,default:!0}},methods:{_handle_files(e){e.length>0&&(this.on_file&&this.on_file(e[0]),this.on_files&&this.on_files(e))},async _handle_file_input_change(e){this._handle_files(e.target.files)},async _handle_drop(e){e.preventDefault(),this.dragging=!1,this._handle_files(e.dataTransfer.files)},_handle_dragenter(e){this.dragging=!0,e.preventDefault()},_handle_dragover(e){e.preventDefault()}}}),o=l,h=a(1001),_=(0,h.Z)(o,r,n,!1,null,null,null),p=_.exports},3605:function(e,t,a){a.r(t),a.d(t,{default:function(){return f}});var i=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"norm-mapa",class:{mobile:e.is_mobile}},[t("div",{staticClass:"control-panel"},[t("Tweakpane",{ref:"tweakpane"})],1),t("div",{staticClass:"rendering-area"},[t("ShaderView",{ref:"shader_view",attrs:{force_width:e.renderer_width,force_height:e.renderer_height,shader_id:"norm_mapa",show_controls:!1},on:{ready:e.update}}),t("DragAndDropManager",{attrs:{mime:e.EMimeTypes.Image,on_file:e._handle_file_upload}}),t("input",{ref:"fileInput",staticStyle:{display:"none"},attrs:{type:"file",accept:"image/*"},on:{change:e.handle_open_file}})],1)])},r=[],n=(a(2062),a(1114)),s=a(7581),d=a(1479),l=a(77),o=a(4229),h=a(4026),_=a(3889);a(3185);var p=(0,s.Z)(h.Z).extend({name:"NormMapa",components:{ThreeRenderer:d["default"],Tweakpane:l.Z,DragAndDropManager:o["default"]},data(){return{EMimeTypes:o.EMimeTypes,step_scale:1.5,iterations:2,heightmap_contrast:2,heightmap_brightness:6,dragging:!1,invert_heightmap:!1,use_directx_format:!1,download_image_name:"rendered_frame",prev_pointer_position:{x:0,y:0},grid:!0,texture_offset:new n.FM8(0,0),texture_scale:new n.FM8(1,1),renderer_width:100,renderer_height:100,preview_mode:!1}},computed:{image_size_formatted(){return`${this.renderer_width}x${this.renderer_height}`}},props:{image:{type:String,default:""}},mounted(){this.init(),this.setup_tweakpane()},beforeDestroy(){},methods:{async init(){var e=this.image;"sample"===e?await this.load_texture("assets/image/moon_heightmap.png"):await this.load_texture(e)},set_texture(e){this.texture=e,this.texture.wrapS=n.OoA,this.texture.wrapT=n.OoA,this.renderer_width=e.image.width,this.renderer_height=e.image.height,this.update_route({image:e.image.src}),this.preview_mode=!1,this.update()},update(){this.$refs.shader_view&&this.$refs.shader_view.material&&(this.texture&&(this.$refs.shader_view.material.uniforms.u_map.value=this.texture,this.$refs.shader_view.material.uniforms.u_map.needsUpdate=!0),this.$refs.shader_view.material.uniforms.u_directx.value=this.use_directx_format?1:0,this.$refs.shader_view.material.uniforms.u_scale.value=this.step_scale,this.$refs.shader_view.material.uniforms.u_invert_height.value=this.invert_heightmap,this.$refs.shader_view.material.uniforms.u_iterations.value=this.iterations,this.$refs.shader_view.material.uniforms.u_contrast.value=this.heightmap_contrast,this.$refs.shader_view.material.uniforms.u_brightness.value=this.heightmap_brightness,this.$refs.shader_view.material.uniforms.u_preview.value=this.preview_mode?1:0)},async load_texture(e){return new Promise(((t,a)=>{this.download_image_name=this.get_file_name(e);let i=new n.dpR;i.load(e,(e=>{console.log("Loaded texture",e),this.set_texture(e),t(e)}))}))},open_file(){this.$refs.fileInput.click()},async _handle_file_upload(e){this.download_image_name=this.get_file_name(e.name);let t=URL.createObjectURL(e),a=await(0,_.br)(t);this.set_texture(a)},async handle_open_file(e){const t=e.target.files[0];this._handle_file_upload(t)},remove_extension(e){return e.replace(/\.[^/.]+$/,"")},get_file_name(e){return this.remove_extension(e.split("\\").pop().split("/").pop())},setup_tweakpane(){let e=this.$refs.tweakpane.pane;e.addButton({title:"Toggle View"}).on("click",(()=>{this.preview_mode=!this.preview_mode,this.update()})),e.addBlade({view:"separator"}),e.addBinding(this,"step_scale",{label:"Step Scale",min:.01,max:10,step:.001}).on("change",(()=>{this.update()})),e.addBinding(this,"iterations",{label:"Iterations",min:1,max:5,step:1}).on("change",(()=>{this.update()})),e.addBinding(this,"heightmap_contrast",{label:"Contrast",min:.1,max:8,step:.1}).on("change",(()=>{this.update()})),e.addBinding(this,"heightmap_brightness",{label:"Brightness",min:.1,max:8,step:.1}).on("change",(()=>{this.update()})),e.addBinding(this,"invert_heightmap",{label:"Invert Heightmap"}).on("change",(()=>{this.update()})),e.addBinding(this,"use_directx_format",{label:"DirectX Format"}).on("change",(({value:e})=>{this.update()})),e.addBlade({view:"separator"}),e.addButton({title:"Open File"}).on("click",(()=>{this.open_file()})),e.addBlade({view:"separator"}),e.addButton({title:"Download as Image"}).on("click",(()=>{this.preview_mode=!1,this.update(),setTimeout((()=>{this.$refs.shader_view.renderer.save_as_image(this.download_image_name)}),200)})),e.addBinding(this,"download_image_name",{label:"",readonly:!0}),e.addBlade({view:"separator"}),e.addBinding(this,"image_size_formatted",{label:"Image Size",readonly:!0})}}}),u=p,g=a(1001),m=(0,g.Z)(u,i,r,!1,null,null,null),f=m.exports}}]);
//# sourceMappingURL=975.js.map